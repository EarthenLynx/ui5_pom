//@ui5-bundle apps/pomodoro/Component-preload.js
sap.ui.require.preload({
	"apps/pomodoro/Component.js":function(){sap.ui.define(["sap/ui/core/UIComponent","sap/ui/Device","./model/models"],function(e,t,i){"use strict";return e.extend("apps.pomodoro.Component",{metadata:{manifest:"json"},init:function(){e.prototype.init.apply(this,arguments);this.setModel(i.createDeviceModel(),"device");this.getRouter().initialize()}})});
},
	"apps/pomodoro/controller/App.controller.js":function(){sap.ui.define(["sap/ui/core/mvc/Controller","apps/pomodoro/model/formatter"],function(o,r){"use strict";return o.extend("apps.pomodoro.controller.App",{formatter:r,onInit:function(){}})});
},
	"apps/pomodoro/controller/Basecontroller.js":function(){sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/m/Text","sap/m/Dialog","sap/m/Button","sap/m/MessageStrip","../model/Pomodoro.model","../model/Task.model"],function(e,t,o,s,a,i,n,r){"use strict";return e.extend("apps.pomodoro.controller.Basecontroller",{async requestNotificationPermission(){const e=Notification.permission;if(e!=="granted"){const e=await Notification.requestPermission();if(e==="granted"){t.show("You will now receive notifications whenever a phase is over");return true}else{t.show("You will receive no notifications. You can change your decision in the Settings panel");return false}}},async sendNotification(e,t){const o=await Notification.requestPermission();if(o==="granted"){const o=new Notification(e,t);o.onclick=e=>{e.preventDefault();window.focus();o.close()}}},_handleCreateMessageStrip(e,t,o){const s=this.getView().byId(o);const a=new i({text:e,type:t,showCloseButton:true,showIcon:true});s.addContent(a)},_handleCreateConfirmationPopup(e,t){var i=new s({title:"Information",type:"Message",state:"Information",content:new o({text:e}),beginButton:new a({text:"Cancel",type:"Reject",press(){i.close();return}}),endButton:new a({text:"Confirm",type:"Accept",press(){if(t){t()}i.close()}}),afterClose(){i.destroy()}});i.open();return},handleSetUserTheme(){if(window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches){this._setTheme("dark")}if(localStorage.getItem("user-theme")){const e=localStorage.getItem("user-theme");this._setTheme(e)}},handleToggleUserTheme(){const e=localStorage.getItem("user-theme");if(e==="dark"){this._setTheme("light")}else{this._setTheme("dark")}},handleDeleteHistory(e=false){if(e===true){t.show("All historical data has been removed from your computer")}if(e===false){t.show("Session data cleared")}this.handleCloseHistoryDialog();r.clearHistory(e)},handleExportHistory(){const{history:e}=r.getData();const t=Object.keys(e[0]);const o=(e,t)=>t===null?"":t;let s=e.map(e=>t.map(t=>JSON.stringify(e[t],o)).join(";"));s.unshift(t.join(";"));s=s.join("\r\n");const a=new Blob([s]);const i=document.createElement("a");i.href=URL.createObjectURL(a);i.download="filename.csv";document.body.appendChild(i);i.click();document.body.removeChild(i)},_setTheme(e){if(e==="dark"){n.setProperty("/settings/appearance/theme","dark");localStorage.setItem("user-theme","dark");sap.ui.getCore().applyTheme("sap_fiori_3_dark")}else if(e==="light"){n.setProperty("/settings/appearance/theme","light");localStorage.setItem("user-theme","light");sap.ui.getCore().applyTheme("sap_fiori_3")}}})});
},
	"apps/pomodoro/controller/Home.controller.js":function(){sap.ui.define(["./Basecontroller","sap/ui/core/Fragment","sap/m/MessageToast","sap/ui/model/Sorter","sap/ui/model/Filter","sap/ui/model/FilterOperator","../model/Pomodoro.model","../model/Task.model","../model/Config.model","../model/formatter"],function(t,e,s,a,o,i,n,r,d,l){"use strict";return t.extend("apps.pomodoro.controller.Home",{formatter:l,async onInit(){n.init();n.tie(this);n.setProperty("/settings/notification/desktopNotification",await this.requestNotificationPermission());r.getHistory();r.tie(this);this.handleSetUserTheme()},handleToggleTimer(){const{ticking:t}=n.getProperty("/timer");if(t){s.show("Timer stopped");return n.stopTicking()}if(!t){s.show("Timer started");return n.startTicking(this)}},async handleFinishCurrentPhase(){const{status:t}=n.getData();const{msTotal:e}=d.getProperty("/settings/minFocus");const{desktopNotification:a}=d.getProperty("/settings/notification");const{ticking:o,msExpired:i,counter:l}=n.getProperty("/timer");if(o&&t.isWorking&&i<e){s.show(`Focus for at least ${(e/6e4).toFixed(0)} minutes!`)}else{n.stopTicking();n.increaseCounter(1);n.setStatusNext();const{id:e,...o}=r.getProperty("/task");if(t.isWorking){if(!!e){o.msExpired+=i;o.startDate=new Date(o.startDate);o.endDate=new Date;await r.updateTaskById(e,o);await r.getHistory();const t=await r.getActiveTask(e);r.setProperty("/task",t)}s.show("Phase completed");if(a){this.sendNotification("Phase completed",{body:`${(i/6e4).toFixed(0)} minute/s passed. Click here and jump into the next phase`})}}if(!t.isWorking){s.show("Pausing finished")}}},handleResetCurrentPhase(){n.stopTicking();n.setStatusPrevious()},handleGetActiveTask(t){const e=t.getParameters().selectedItem.mProperties.text;const s=e.split(" - ")[0];r.getActiveTask(s)},async handleCreateNewTask(){try{const{task:t}=r.getData();t.startDate=new Date(t.startDate||(new Date).getTime());t.endDate=new Date(t.endDate||(new Date).getTime());await r.addToHistory(t);await r.getHistory();s.show("Task added to tasklist.");this.handleCloseTaskDialog()}catch(t){s.show(`Could not add task to tasklist: ${t}`)}},handleUpdateHistoryItem(){const{id:t,...e}=r.getProperty("/taskEditByUser");e.startDate=new Date(e.startDate);e.endDate=new Date(e.endDate);r.updateTaskById(t,e);this.handleCloseTaskEditDialog()},handleOpenTaskDialog(){const t=this.getView();if(!this.byId("task-dialog")){e.load({id:t.getId(),name:"apps.pomodoro.view.Fragment.Task",controller:this}).then(e=>{t.addDependent(e);e.open()})}else{this.byId("task-dialog").open()}},handleCloseTaskDialog(){const t=this.byId("task-dialog");if(t){t.close()}},async handleDeleteHistoryItem(t){try{const e=t.getSource().getBindingContext("Task").getPath();const a=r.getProperty(`${e}/id`);await r.deleteTaskById(a);await r.getHistory();s.show("Task deleted successfully")}catch(t){s.show("Could not delete task")}},handleOpenTaskEditDialog(t){const s=t.getSource();const a=s.getSelectedAppointments?s.getSelectedAppointments()[0].getBindingContext("Task").getPath():s.getBindingContext("Task").getPath();const o=r.getProperty(a);o.sPath=a;r.setProperty("/taskEditByUser",o);const i=this.getView();if(!this.byId("task-edit-dialog")){this._taskEditDialog=e.load({id:i.getId(),name:"apps.pomodoro.view.Fragment.TaskEdit",controller:this}).then(t=>{i.addDependent(t);t.open()})}else{this.byId("task-edit-dialog").open()}},handleCloseTaskEditDialog(){const t=this.byId("task-edit-dialog");if(t){t.close()}},async handleGetHistory(){const t=await r.getHistory();if(t){s.show("Loaded session data from history")}else{s.show("No history data found")}},handleApplySearchTaskList(t){const e=[];const s=t.getParameter("query");if(s&&s.length>0){const t=new o({path:"title",operator:i.Contains,value1:s});const a=new o({path:"desc",operator:i.Contains,value1:s});e.push(new o({filters:[t,a],and:false}))}this.byId("task-table").getBinding("items").filter(e,"Application")},handleApplyDateSorter(){const t=[];t.push(new a("startDate",true,this._groupByDay));this.byId("task-table").getBinding("items").sort(t)},_setNewTaskMsExpired(t){const e=t.getSource().getValue();const s=e*(1e3*60*60).toFixed(0);r.setProperty("/task/msExpired",s)},_setNewTaskMsEstimated(t){const e=t.getSource().getValue();const s=e*(1e3*60*60).toFixed(0);r.setProperty("/task/msEstimated",s)},_setActiveTaskMsExpired(t){const e=t.getSource().getValue();const s=e*(1e3*60*60).toFixed(0);r.setProperty("/taskEditByUser/msExpired",s)},_setActiveTaskMsEstimated(t){const e=t.getSource().getValue();const s=e*(1e3*60*60).toFixed(0);r.setProperty("/taskEditByUser/msEstimated",s)},_groupByDay(t){const e=t.getProperty("startDate");return{key:l.formatStringToDateDay(e),text:l.formatStringToDateDay(e)}}})});
},
	"apps/pomodoro/controller/Settings.controller.js":function(){sap.ui.define(["./Basecontroller","sap/ui/core/Fragment","sap/m/MessageToast","../model/Config.model","../model/formatter"],function(e,s,t,o,n){"use strict";return e.extend("apps.pomodoro.controller.Settings",{formatter:n,onInit(){o.tie(this);this.handleSynchronizeUserSettings()},handleSynchronizeUserSettings(){const e=o.syncUserSettings();if(e){console.log("Loaded user session data from local storage")}},handleSetUserSettings(){try{o.saveUserSettings();t.show("Saved your preferences")}catch(e){t.show(`Could not save changes: ${e}`)}},handleResetUserSettings(){o.resetUserSettings();t.show("Restored standard settings. Make sure to save them")},handleSynchronizeMinFocus(){const{pomodoro:e,minFocus:s}=o.getProperty("/settings");if(e.msTotal<s.msTotal){o.setProperty("/settings/minFocus/msTotal",e.msTotal)}},handleOpenHistoryDialog(){const e=this.getView();if(!this.byId("history-dialog")){s.load({id:e.getId(),name:"apps.pomodoro.view.Fragment.History",controller:this}).then(s=>{e.addDependent(s);s.open()})}else{this.byId("history-dialog").open()}},handleCloseHistoryDialog(){const e=this.byId("history-dialog");if(e){e.close()}}})});
},
	"apps/pomodoro/i18n/i18n.properties":'title=Basic Template\nappTitle=Basic Template\nappDescription=Blank app as starting point for your app development',
	"apps/pomodoro/manifest.json":'{"_version":"1.12.0","sap.app":{"id":"apps.pomodoro","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"1.0.0"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","ach":"ach"},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"rootView":{"viewName":"apps.pomodoro.view.App","type":"XML","async":true,"id":"app"},"dependencies":{"minUI5Version":"1.60.0","libs":{"sap.ui.core":{},"sap.m":{},"sap.ui.layout":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"apps.pomodoro.i18n.i18n"}}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","viewType":"XML","viewPath":"apps.pomodoro.view","controlId":"app","controlAggregation":"pages","async":true},"routes":[{"pattern":"","name":"home","target":["home"]}],"targets":{"home":{"viewName":"Home","viewId":"home","viewLevel":1,"title":"{i18n>title}"}}}}}',
	"apps/pomodoro/model/Config.model.js":function(){sap.ui.define(["sap/ui/model/json/JSONModel"],function(e){"use strict";const t={pomodoro:{name:"Working",msTotal:15e5},shortBreak:{name:"Short break",msTotal:3e5},longBreak:{name:"Long break",msTotal:9e5},minFocus:{msTotal:6e5},appearance:{theme:"dark"},notification:{desktopNotification:false,soundUrl:"/assets/boxing_gong.mp3"},history:{session:true,persistent:false,showBreaks:false,calenderStartHour:6,calenderEndHour:20}};const s=e.extend("apps.pomodoro.model.SettingsModel",{modelname:"Config",tie(e){e.getOwnerComponent().setModel(this,this.modelname)},init(){const{msTotal:e}=this.getProperty("/settings/pomodoro");this.setTimer(e)},saveUserSettings(){const{settings:e}=this.getData();localStorage.setItem("pomodoro-user-settings",JSON.stringify(e))},syncUserSettings(){const e=localStorage.getItem("pomodoro-user-settings");if(!!e){this.setProperty("/settings",JSON.parse(e));return true}else{return false}},resetUserSettings(){this.setProperty("/settings",{...t})}});return new s({settings:{...t}})});
},
	"apps/pomodoro/model/Pomodoro.model.js":function(){sap.ui.define(["sap/ui/model/json/JSONModel","./Config.model","./Task.model"],function(t,e){"use strict";const s=t.extend("apps.pomodoro.model.PomodoroModel",{modelname:"Pomodoro",tie(t){t.getOwnerComponent().setModel(this,this.modelname)},init(){const{msTotal:t}=e.getProperty("/settings/pomodoro");this.setTimer(t)},setStatusNext(){const{isWorking:t,isPausing:e}=this.getProperty("/status");if(this.getProperty("/timer/counter")/8>=1&&t===true){this.setProperty("/timer/counter",0);return this.setStatusPausingLong()}if(t){return this.setStatusPausingShort()}if(e){return this.setStatusWorking()}},setStatusPrevious(){const{statusName:t}=this.getData();if(t==="Short break"){return this.setStatusPausingShort()}if(t==="Long break"){return this.setStatusPausingLong()}return this.setStatusWorking()},setTimer(t){this.setProperty("/timer/msTotal",t);this.setProperty("/timer/msLeft",t);this.setProperty("/timer/msExpired",0)},setStatusWorking(){const{msTotal:t,name:s}=e.getProperty("/settings/pomodoro");this.setProperty("/status",{isWorking:true,isPausing:false});this.setProperty("/statusName",s);this.setTimer(t)},setStatusPausingShort(){const{msTotal:t,name:s}=e.getProperty("/settings/shortBreak");this.setProperty("/status",{isWorking:false,isPausing:true});this.setProperty("/statusName",s);this.setTimer(t)},setStatusPausingLong(){const{msTotal:t,name:s}=e.getProperty("/settings/longBreak");this.setProperty("/status",{isWorking:false,isPausing:true});this.setProperty("/statusName",s);this.setTimer(t)},startTicking(t){this.stopTicking(true);const e=setInterval(()=>{this.tick(t)},1e3);this.setProperty("/intervalHandler",e);this.setProperty("/timer/ticking",true)},stopTicking(t=false){const e=this.getProperty("/intervalHandler");if(t===true){for(let t=1;t<Math.max();t++){clearInterval(t)}}clearInterval(e);this.setProperty("/timer/ticking",false)},tick(t){const{statusName:e}=this.getData();let{msLeft:s,msExpired:i}=this.getProperty("/timer");s-=1e3;i+=1e3;document.title=`${e} - ${(s/6e4).toFixed(1)} Minutes left`;if(s===0){this.playPhaseDoneAudio();setTimeout(()=>{document.title=`Finished ${e}`;t.handleFinishCurrentPhase()},1e3)}this.setProperty("/timer/msLeft",s);this.setProperty("/timer/msExpired",i)},playPhaseDoneAudio(){const{soundUrl:t}=e.getProperty("/settings/notification");const s=new Audio(t);s.play()},increaseCounter(t){let{counter:e}=this.getProperty("/timer");e+=t;this.setProperty("/timer/counter",e)}});return new s({timer:{msTotal:0,msLeft:0,msExpired:0,ticking:false,counter:0},statusName:"Working",status:{isWorking:true,isPausing:false},intervalHandler:null})});
},
	"apps/pomodoro/model/Task.model.js":function(){sap.ui.define(["sap/ui/model/json/JSONModel","./Config.model"],function(t,s){"use strict";const e=t.extend("apps.pomodoro.model.TaskModel",{modelname:"Task",modelpath:"http://192.168.2.159:9001/pomodoro-histories/",tie(t){t.getOwnerComponent().setModel(this,this.modelname)},async addToHistory(t){if(s.getProperty("/settings/history/session")===true){const s=await this._post("",t)}},async getTaskById(t){const s=await this._get(t);return await s.json()},async updateTaskById(t,s){const e=await this._put(t,s)},async deleteTaskById(t){const s=await this._delete(t)},clearHistory(t=false){this.setProperty("/history",[]);if(t===true){localStorage.setItem("history",JSON.stringify([]))}},async getActiveTask(t){const s=await this._get(t);this.setProperty("/task",s)},async getHistory(){const t=await this._get();if(!!t){this.setProperty("/history",t);return true}else{return false}},async _get(t=""){const s=this.modelpath+t;const e={"content-type":"application/json"};const o={method:"get",headers:e};const a=await fetch(s,o);return await a.json()},async _post(t="",s){const e=this.modelpath+t;const o={"content-type":"application/json"};const a=JSON.stringify(s);const n={method:"post",headers:o,body:a};const i=await fetch(e,n);return await i.json()},async _put(t,s){const e=this.modelpath+t;const o={"content-type":"application/json"};const a=JSON.stringify(s);const n={method:"put",headers:o,body:a};const i=await fetch(e,n);return await i.json()},async _delete(t){const s=this.modelpath+t;const e={method:"delete"};const o=await fetch(s,e);return await o.json()}});return new e({task:{},taskEditByUser:{},taskEstimation:0,history:[]})});
},
	"apps/pomodoro/model/formatter.js":function(){sap.ui.define([],function(){"use strict";return{formatMsToMinutes(e){if(e){const t=Math.floor(e/6e4);const r=(e%6e4/1e3).toFixed(0);return t+":"+(r<10?"0":"")+r}else{return"0:00"}},formatMsToHours(e){if(e){return(e/(1e3*60*60)).toFixed(2)}else{return"0.00"}},formatStringToDateTime(e){if(e){return new Date(e)}else{return new Date}},formatStringToDateDay(e){if(e){const t=new Date(e);const r=t.getDate();const n=t.getMonth()+1<10?"0"+(t.getMonth()+1):t.getMonth();const o=t.getFullYear();return`${r}.${n}.${o}`}else{return new Date}},formatStringToNumber(e){if(e){return parseInt(e)}else{return 0}},formatUniqueHistory(e){if(e){return e.map(e=>e.title).filter((e,t,r)=>r.indexOf(e)===t)}else{return[]}}}});
},
	"apps/pomodoro/model/models.js":function(){sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/Device"],function(e,n){"use strict";return{createDeviceModel:function(){var i=new e(n);i.setDefaultBindingMode("OneWay");return i}}});
},
	"apps/pomodoro/view/App.view.xml":'<mvc:View\n\tdisplayBlock="true"\n\txmlns="sap.m"\n\txmlns:mvc="sap.ui.core.mvc"\n\tcontrollerName="apps.pomodoro.controller.App"><Shell><App id="app"/></Shell></mvc:View>',
	"apps/pomodoro/view/Calender.view.xml":'<mvc:View controllerName="apps.pomodoro.controller.Home" displayBlock="true"\n  xmlns="sap.m"\n  xmlns:l="sap.ui.layout"\n  xmlns:mvc="sap.ui.core.mvc"\n  xmlns:unified="sap.ui.unified"\n  xmlns:core="sap.ui.core"><SinglePlanningCalendar id="task-calender" appointmentSelect="handleOpenTaskEditDialog" fullDay="false" startHour="{path: \'Config>/settings/history/calenderStartHour\', formatter: \'.formatter.formatStringToNumber\'}" endHour="{path: \'Config>/settings/history/calenderEndHour\', formatter: \'.formatter.formatStringToNumber\'}" title= "Pomodoro Calender" appointments="{path: \'Task>/history/\'}"><views><SinglePlanningCalendarDayView key="DayView" title="Daily overview" /><SinglePlanningCalendarWeekView key="WeekView" title="Weekly overview" /></views><appointments><unified:CalendarAppointment title= "{Task>title}" text= "{Task>desc}" color="#1866b4" startDate= "{path: \'Task>startDate\', formatter: \'.formatter.formatStringToDateTime\'}" endDate= "{path: \'Task>endDate\', formatter: \'.formatter.formatStringToDateTime\'}"></unified:CalendarAppointment></appointments></SinglePlanningCalendar></mvc:View>\n',
	"apps/pomodoro/view/Fragment/History.fragment.xml":'<core:FragmentDefinition xmlns="sap.m"\n  xmlns:core="sap.ui.core"><Dialog id="history-dialog" title="Delete history data" draggable="true" class="sapUiContentPadding"><beginButton><Button type="Reject" text="Delete" press="handleDeleteHistory(true)" /></beginButton><endButton><Button text="Cancel" press="handleCloseHistoryDialog" /></endButton><content><VBox alignItems="Center"><Text text="The following action will delete all history data from your mashine."></Text><Text text="This cannot be undone. Consider making a backup of your data before you continue"></Text><Button type="Transparent" text="Export history data as .csv file" icon="sap-icon://save" press="handleExportHistory" /></VBox></content></Dialog></core:FragmentDefinition>',
	"apps/pomodoro/view/Fragment/Task.fragment.xml":'<core:FragmentDefinition xmlns="sap.m"\n\txmlns:core="sap.ui.core"><Dialog id="task-dialog" title="Create a new task" draggable="true"  class="sapUiContentPadding"><beginButton><Button icon="sap-icon://save"  enabled="{Config>/settings/history/session}" text="Create task" tooltip="Add this task to your tasklist. Only possible if you have \'Record session\' set to active in your settings" press="handleCreateNewTask" /></beginButton><endButton><Button text="Close" tooltip="Set this task as your current focus. If \'Record session\' is active, your working time and breaks will automatically be added to the currently active task" press="handleCloseTaskDialog" /></endButton><content><Label text="What are you focusing on?"></Label><Input suggestionItemSelected="handleGetActiveTask" placeholder="What are you focusing on?" value="{Task>/task/title}" showSuggestion="true" suggestionItems="{Task>/history}"><suggestionItems><core:ListItem text="{Task>title}" additionalText="{path: \'Task>status\'} - {path: \'Task>msExpired\', formatter: \'.formatter.formatMsToMinutes\'} / {path: \'Task>msExpected\', formatter: \'.formatter.formatMsToMinutes\'}"/></suggestionItems></Input><HBox class="sapUiSmallMarginTop sapUiSmallMarginBottom"><VBox class="sapUiSmallMarginEnd"><Label text="Time estimated"></Label><StepInput placeholder="Time estimated" change="_setNewTaskMsEstimated" value="{path: \'Task>/task/msEstimated\', formatter: \'.formatter.formatMsToHours\'}" displayValuePrecision="2" width="100%" min="0" step="0.25" largerStep="1" textAlign="Center"/></VBox><VBox class="sapUiSmallMarginStart"><Label text="Time spent"></Label><StepInput placeholder="Time spent" change="_setNewTaskMsExpired" value="{path: \'Task>/task/msExpired\', formatter: \'.formatter.formatMsToHours\'}" displayValuePrecision="2" width="100%" min="0" step="0.25" largerStep="1" textAlign="Center"/></VBox></HBox><Label text="Edit comment"></Label><TextArea placeholder="Add a comment" value="{Task>/task/desc}" width="100%"/><HBox class="sapUiSmallMarginTop sapUiSmallMarginBottom"><VBox width="100%" class="sapUiSmallMarginEnd"><Label text="Edit start date"></Label><DateTimePicker width="100%" value="{Task>/task/startDate}" minutesStep="5" secondsStep="30" class="sapUiSmallMarginBottom"/></VBox><VBox width="100%" class="sapUiSmallMarginStart"><Label text="Edit end date"></Label><DateTimePicker width="100%" value="{Task>/task/endDate}" minutesStep="5" secondsStep="30" class="sapUiSmallMarginBottom"/></VBox></HBox></content></Dialog></core:FragmentDefinition>',
	"apps/pomodoro/view/Fragment/TaskEdit.fragment.xml":'<core:FragmentDefinition xmlns="sap.m"\n  xmlns:core="sap.ui.core"><Dialog id="task-edit-dialog" title="Edit task {Task>/taskEditByUser/id}" draggable="true" class="sapUiContentPadding"><beginButton><Button icon="sap-icon://save" text="Save" press="handleUpdateHistoryItem" /></beginButton><endButton><Button text="Close" press="handleCloseTaskEditDialog" /></endButton><content><Label text="Edit task title"></Label><Input placeholder="Edit task title" value="{Task>/taskEditByUser/title}" showSuggestion="true" /><HBox class="sapUiSmallMarginTop sapUiSmallMarginBottom"><VBox class="sapUiSmallMarginEnd"><Label text="Edit time estimated"></Label><StepInput placeholder="Edit time estimated" change="_setActiveTaskMsEstimated" value="{path: \'Task>/taskEditByUser/msEstimated\', formatter: \'.formatter.formatMsToHours\'}" displayValuePrecision="2" width="100%" min="0" step="0.25" largerStep="1" textAlign="Center"/></VBox><VBox class="sapUiSmallMarginStart"><Label text="Edit time spent"></Label><StepInput placeholder="Edit time spent" change="_setActiveTaskMsExpired" value="{path: \'Task>/taskEditByUser/msExpired\', formatter: \'.formatter.formatMsToHours\'}" displayValuePrecision="2" width="100%" min="0" step="0.25" largerStep="1" textAlign="Center"/></VBox></HBox><Label text="Edit comment"></Label><TextArea placeholder="Add a comment" value="{Task>/taskEditByUser/desc}" width="100%"/><HBox class="sapUiSmallMarginTop sapUiSmallMarginBottom"><VBox width="100%" class="sapUiSmallMarginEnd"><Label text="Edit start date"></Label><DateTimePicker width="100%" value="{Task>/taskEditByUser/startDate}" minutesStep="5" secondsStep="30" class="sapUiSmallMarginBottom"/></VBox><VBox width="100%" class="sapUiSmallMarginStart"><Label text="Edit end date"></Label><DateTimePicker width="100%" value="{Task>/taskEditByUser/endDate}" minutesStep="5" secondsStep="30" class="sapUiSmallMarginBottom"/></VBox></HBox></content></Dialog></core:FragmentDefinition>',
	"apps/pomodoro/view/Home.view.xml":'<mvc:View controllerName="apps.pomodoro.controller.Home" displayBlock="true"\n\txmlns="sap.m"\n\txmlns:mvc="sap.ui.core.mvc"\n\txmlns:core="sap.ui.core"><Page id="page" title="Pomodoro Assistant"><content><IconTabBar applyContentPadding="false" stretchContentHeight="true"><items><IconTabFilter design="Vertical" icon="sap-icon://fob-watch" text="Timer"><mvc:XMLView viewName="apps.pomodoro.view.Pomodoro" async="true" /></IconTabFilter><IconTabFilter visible="{Config>/settings/history/session}" count="{= ${Task>/history}.length }" design="Vertical" icon="sap-icon://activity-individual" text="Tasks"><mvc:XMLView viewName="apps.pomodoro.view.Tasks" async="true" /></IconTabFilter><IconTabFilter visible="{Config>/settings/history/session}" design="Vertical" icon="sap-icon://date-time" text="History"><mvc:XMLView viewName="apps.pomodoro.view.Calender" async="true" /></IconTabFilter><IconTabFilter design="Vertical" icon="sap-icon://action-settings" text="Settings"><mvc:XMLView viewName="apps.pomodoro.view.Settings" async="false" /></IconTabFilter></items></IconTabBar></content><footer><OverflowToolbar id="otbFooter"><Input width="12rem" suggestionItemSelected="handleGetActiveTask" placeholder="Choose a focus ..." value="{Task>/task/query}" showSuggestion="true" suggestionItems="{Task>/history}"><suggestionItems><core:ListItem text="{Task>id} - {Task>title}" additionalText="{path: \'Task>status\'} - {path: \'Task>msExpired\', formatter: \'.formatter.formatMsToMinutes\'} / {path: \'Task>msExpected\', formatter: \'.formatter.formatMsToMinutes\'}"/></suggestionItems></Input><ToolbarSpacer/><Button type="Transparent" text="Create new task" icon="sap-icon://create" press="handleOpenTaskDialog" /></OverflowToolbar></footer></Page></mvc:View>',
	"apps/pomodoro/view/Pomodoro.view.xml":'<mvc:View controllerName="apps.pomodoro.controller.Home" displayBlock="true"\n  xmlns="sap.m"\n  xmlns:l="sap.ui.layout"\n  xmlns:mvc="sap.ui.core.mvc"\n  xmlns:core="sap.ui.core"><l:BlockLayout background="Dashboard" class="ui-center-container"><l:BlockLayoutRow accentCells="Accent1"><l:BlockLayoutCell><VBox width="20rem" alignItems="Center"><Text textAlign="Center" text="Current task:"></Text><Text class="sapUiSmallMarginTop sapUiSmallMarginBottom" textAlign="Center" text="{Task>/task/title}"></Text><Text class="ui-title" text="{ path: \'Pomodoro>/timer/msLeft\', formatter: \'.formatter.formatMsToMinutes\'}" /></VBox><ProgressIndicator state="{= (${Pomodoro>/timer/msExpired} / ${Pomodoro>/timer/msTotal} * 100) >= 80 ? \'Success\' : \'Information\'}" width="20rem" class="sapUiSmallMarginBottom" percentValue="{= ${Pomodoro>/timer/msExpired} / ${Pomodoro>/timer/msTotal} * 100 }"/><VBox alignItems="Center"><HBox><Button type="{= (${Pomodoro>/timer/msExpired} / ${Pomodoro>/timer/msTotal} * 100) >= 80 ? \'Success\' : \'Default\'}" class="sapUiTinyMargin" tooltip="Finish active phase" icon="sap-icon://future" press="handleFinishCurrentPhase" /><Button class="sapUiTinyMargin" tooltip="Toggle timer" icon="{=${Pomodoro>/timer/ticking} ? \'sap-icon://pause\' : \'sap-icon://media-play\'}" press="handleToggleTimer" /><Button class="sapUiTinyMargin" tooltip="Reset this phase" icon="sap-icon://stop" press="handleResetCurrentPhase" /></HBox></VBox></l:BlockLayoutCell></l:BlockLayoutRow></l:BlockLayout></mvc:View>',
	"apps/pomodoro/view/Settings.view.xml":'<mvc:View controllerName="apps.pomodoro.controller.Settings" displayBlock="true"\n  xmlns="sap.m"\n  xmlns:l="sap.ui.layout"\n  xmlns:f="sap.ui.layout.form"\n  xmlns:mvc="sap.ui.core.mvc"\n  xmlns:core="sap.ui.core"><f:SimpleForm title="Settings" editable="true" layout="ResponsiveGridLayout" labelSpanXL="4" labelSpanL="4" labelSpanM="4" labelSpanS="12" adjustLabelSpan="false" emptySpanXL="0" emptySpanL="0" emptySpanM="0" emptySpanS="0" columnsXL="3" columnsL="2" columnsM="2" singleContainerFullSize="false"><f:toolbar><Toolbar id="TB1"><Title id="Title1" text="Address"/><ToolbarSpacer /><Button icon="sap-icon://reset" tooltip="Restore standard settings" press="handleResetUserSettings"/><Button icon="sap-icon://save" tooltip="Save your settings" press="handleSetUserSettings" /></Toolbar></f:toolbar><f:content><core:Title text="Pomodoro intervals" /><Label text="Focus interval - {path: \'Config>/settings/pomodoro/msTotal\', formatter: \'.formatter.formatMsToMinutes\'}" /><Slider tooltip="Select the interval of a single pomodoro session" step="60000" value="{Config>/settings/pomodoro/msTotal}" min="0" max="3000000" liveChange="handleSynchronizeMinFocus" class="sapUiTinyMarginBottom" /><Label text="Short break - {path: \'Config>/settings/shortBreak/msTotal\', formatter: \'.formatter.formatMsToMinutes\'}" /><Slider tooltip="Select the interval of a single short break" step="7500" value="{Config>/settings/shortBreak/msTotal}" min="0" max="600000" class="sapUiTinyMarginBottom" /><Label text="Long break - {path: \'Config>/settings/longBreak/msTotal\', formatter: \'.formatter.formatMsToMinutes\'}" /><Slider tooltip="Select the interval of a single long break" step="30000" value="{Config>/settings/longBreak/msTotal}" min="0" max="1500000" class="sapUiTinyMarginBottom" /><Label text="Min. focus - {path: \'Config>/settings/minFocus/msTotal\', formatter: \'.formatter.formatMsToMinutes\'}" /><Slider tooltip="Select for how long you would like to minimally focus. Skipping a phase will fail if your minimum focus time has not been reached" step="30000" value="{Config>/settings/minFocus/msTotal}" min="0" max="1500000" liveChange="handleSynchronizeMinFocus" class="sapUiTinyMarginBottom" /><core:Title text="Preferences" /><Label text="Activate Nightshift" /><Switch class="sapUiSmallMarginBottom" tooltip="Switch between normal and dark theme" change="handleToggleUserTheme" state="{=${Config>/settings/appearance/theme} === \'dark\' ? true : false}" /><Label text="Record session" /><Switch class="sapUiSmallMarginBottom" tooltip="If activated, your pomodoro work - and break sessions will be logged while this window stays open" state="{Config>/settings/history/session}" /><Label text="Record history" /><Switch class="sapUiSmallMarginBottom" tooltip="If activated, your pomodoro work - and break sessions will be logged in your browser\'s local storage. These data can be deleted by clicking on \'Delete history data\' in Settings" enabled="{Config>/settings/history/session}" state="{Config>/settings/history/persistent}" /><Label text="Send notifications" /><Switch class="sapUiSmallMarginBottom" tooltip="(experimental) If activated, you will receive desktop notifications when your pomodoro is over. Your browser must give this website permission to activate this feature" state="{Config>/settings/notification/desktopNotification}" /><core:Title text="Working Hours and History" /><Label text="Working from" /><TimePicker tooltip="Select from what time you would like to view your pomodoros in the calender widget" width="4rem" value="{Config>/settings/history/calenderStartHour}" valueFormat="HH" displayFormat="HH" enabled="{Config>/settings/history/session}" /><Label text="Working to" /><TimePicker tooltip="Select to what time you would like to view your pomodoros in the calender widget" width="4rem" value="{Config>/settings/history/calenderEndHour}" valueFormat="HH" displayFormat="HH" enabled="{Config>/settings/history/session}" /><Label text="Export history" /><Button width="2rem" icon="sap-icon://download" tooltip="Export history data as .csv" press="handleExportHistory" /><Label text="Delete history" /><Button width="2rem" type="Reject" icon="sap-icon://delete" tooltip="Delete history data stored on your computer" press="handleOpenHistoryDialog" /></f:content></f:SimpleForm></mvc:View>',
	"apps/pomodoro/view/Tasks.view.xml":'<mvc:View controllerName="apps.pomodoro.controller.Home" displayBlock="true"\n  xmlns="sap.m"\n  xmlns:l="sap.ui.layout"\n  xmlns:mvc="sap.ui.core.mvc"\n  xmlns:core="sap.ui.core"><Table id="task-table" inset="false" items="{Task>/history}" alternateRowColors="true"><headerToolbar><OverflowToolbar><content><SearchField search="handleApplySearchTaskList" width="15rem"/><ToolbarSpacer/><Button icon="sap-icon://group-2" tooltip="Group tasks together by their date" press="handleApplyDateSorter" /><Button icon="sap-icon://synchronize" tooltip="This will try and find older session data, if you have the history option enabled" press="handleGetHistory" /></content></OverflowToolbar></headerToolbar><infoToolbar><OverflowToolbar><Label text="Your past Pomodoros are logged here. If you synchronize, these data might be lost if you have not kept a history before. You can permanently remove older tasks in your settings"/></OverflowToolbar></infoToolbar><columns><Column><Text text="Task name" /></Column><Column minScreenWidth="Desktop" demandPopin="true"><Text text="Description" /></Column><Column width="10rem" minScreenWidth="Tablet" demandPopin="true" hAlign="Center"><Text text="Time estimated" /></Column><Column width="10rem" minScreenWidth="Tablet" demandPopin="true" hAlign="Center"><Text text="Time spent" /></Column><Column width="3rem"></Column><Column width="3rem"></Column></columns><items><ColumnListItem><cells><ObjectIdentifier text="{Task>title}"/><Text text="{Task>desc}" /><Text text="{path: \'Task>msEstimated\', formatter: \'.formatter.formatMsToHours\'} h" /><Text text="{path: \'Task>msExpired\', formatter: \'.formatter.formatMsToHours\'} h" /><Button type="Transparent" icon="sap-icon://delete" tooltip="Delete this task" press="handleDeleteHistoryItem" /><Button type="Transparent" icon="sap-icon://edit" tooltip="Edit this task" press="handleOpenTaskEditDialog" /></cells></ColumnListItem></items></Table></mvc:View>'
});
