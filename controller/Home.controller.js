sap.ui.define(["./Basecontroller","sap/ui/core/Fragment","sap/m/MessageToast","sap/ui/model/Sorter","sap/ui/model/Filter","sap/ui/model/FilterOperator","../model/Pomodoro.model","../model/Task.model","../model/Config.model","../model/formatter"],function(t,e,s,a,o,i,n,r,d,l){"use strict";return t.extend("apps.pomodoro.controller.Home",{formatter:l,async onInit(){n.init();n.tie(this);n.setProperty("/settings/notification/desktopNotification",await this.requestNotificationPermission());r.getHistory();r.tie(this);this.handleSetUserTheme()},handleToggleTimer(){const{ticking:t}=n.getProperty("/timer");if(t){s.show("Timer stopped");return n.stopTicking()}if(!t){s.show("Timer started");return n.startTicking(this)}},async handleFinishCurrentPhase(){const{status:t}=n.getData();const{msTotal:e}=d.getProperty("/settings/minFocus");const{desktopNotification:a}=d.getProperty("/settings/notification");const{ticking:o,msExpired:i,counter:l}=n.getProperty("/timer");if(o&&t.isWorking&&i<e){s.show(`Focus for at least ${(e/6e4).toFixed(0)} minutes!`)}else{n.stopTicking();n.increaseCounter(1);n.setStatusNext();const{id:e,...o}=r.getProperty("/task");if(t.isWorking){if(!!e){o.msExpired+=i;o.startDate=new Date(o.startDate);o.endDate=new Date;await r.updateTaskById(e,o);r.getHistory()}s.show("Phase completed");if(a){this.sendNotification("Phase completed",{body:`${(i/6e4).toFixed(0)} minute/s passed. Click here and jump into the next phase`})}}if(!t.isWorking){s.show("Pausing finished")}}},handleResetCurrentPhase(){n.stopTicking();n.setStatusPrevious()},handleGetActiveTask(t){const e=t.getParameters().selectedItem.mProperties.text;const s=e.split(" - ")[0];r.getActiveTask(s)},async handleCreateNewTask(){try{const{task:t}=r.getData();t.startDate=new Date(t.startDate||(new Date).getTime());t.endDate=new Date(t.endDate||(new Date).getTime());await r.addToHistory(t);await r.getHistory();s.show("Task added to tasklist.");this.handleCloseTaskDialog()}catch(t){s.show(`Could not add task to tasklist: ${t}`)}},handleUpdateHistoryItem(){const{id:t,...e}=r.getProperty("/taskEditByUser");e.startDate=new Date(e.startDate);e.endDate=new Date(e.endDate);r.updateTaskById(t,e);this.handleCloseTaskEditDialog()},handleOpenTaskDialog(){const t=this.getView();if(!this.byId("task-dialog")){e.load({id:t.getId(),name:"apps.pomodoro.view.Fragment.Task",controller:this}).then(e=>{t.addDependent(e);e.open()})}else{this.byId("task-dialog").open()}},handleCloseTaskDialog(){const t=this.byId("task-dialog");if(t){t.close()}},async handleDeleteHistoryItem(t){try{const e=t.getSource().getBindingContext("Task").getPath();const a=r.getProperty(`${e}/id`);await r.deleteTaskById(a);await r.getHistory();s.show("Task deleted successfully")}catch(t){s.show("Could not delete task")}},handleOpenTaskEditDialog(t){const s=t.getSource();const a=s.getSelectedAppointments?s.getSelectedAppointments()[0].getBindingContext("Task").getPath():s.getBindingContext("Task").getPath();const o=r.getProperty(a);o.sPath=a;r.setProperty("/taskEditByUser",o);const i=this.getView();if(!this.byId("task-edit-dialog")){this._taskEditDialog=e.load({id:i.getId(),name:"apps.pomodoro.view.Fragment.TaskEdit",controller:this}).then(t=>{i.addDependent(t);t.open()})}else{this.byId("task-edit-dialog").open()}},handleCloseTaskEditDialog(){const t=this.byId("task-edit-dialog");if(t){t.close()}},async handleGetHistory(){const t=await r.getHistory();if(t){s.show("Loaded session data from history")}else{s.show("No history data found")}},handleApplySearchTaskList(t){const e=[];const s=t.getParameter("query");if(s&&s.length>0){const t=new o({path:"title",operator:i.Contains,value1:s});const a=new o({path:"desc",operator:i.Contains,value1:s});e.push(new o({filters:[t,a],and:false}))}this.byId("task-table").getBinding("items").filter(e,"Application")},handleApplyDateSorter(){const t=[];t.push(new a("startDate",true,this._groupByDay));this.byId("task-table").getBinding("items").sort(t)},_setNewTaskMsExpired(t){const e=t.getSource().getValue();const s=e*(1e3*60*60).toFixed(0);r.setProperty("/task/msExpired",s)},_setNewTaskMsEstimated(t){const e=t.getSource().getValue();const s=e*(1e3*60*60).toFixed(0);r.setProperty("/task/msEstimated",s)},_setActiveTaskMsExpired(t){const e=t.getSource().getValue();const s=e*(1e3*60*60).toFixed(0);r.setProperty("/taskEditByUser/msExpired",s)},_setActiveTaskMsEstimated(t){const e=t.getSource().getValue();const s=e*(1e3*60*60).toFixed(0);r.setProperty("/taskEditByUser/msEstimated",s)},_groupByDay(t){const e=t.getProperty("startDate");return{key:l.formatStringToDateDay(e),text:l.formatStringToDateDay(e)}}})});