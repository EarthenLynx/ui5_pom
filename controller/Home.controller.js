sap.ui.define(["./Basecontroller","sap/ui/core/Fragment","sap/m/MessageToast","sap/ui/model/Sorter","sap/ui/model/Filter","sap/ui/model/FilterOperator","../model/Pomodoro.model","../model/Task.model","../model/Config.model","../model/formatter"],function(t,e,s,i,o,a,n,r,d,l){"use strict";return t.extend("sap.ui.demo.basicTemplate.controller.Home",{formatter:l,async onInit(){n.init();n.tie(this);n.setProperty("/settings/notification/desktopNotification",await this.requestNotificationPermission());r.syncHistory();r.tie(this);this.handleSetUserTheme()},onAfterRendering(){this.handleApplyToggleFilterTasks(false)},handleToggleTimer(){const{ticking:t}=n.getProperty("/timer");if(t){s.show("Timer stopped");return n.stopTicking()}if(!t){s.show("Timer started");return n.startTicking(this)}},handleFinishCurrentPhase(){const{status:t,taskEstimation:e}=n.getData();const{msTotal:i}=d.getProperty("/settings/minFocus");const{desktopNotification:o}=d.getProperty("/settings/notification");const{ticking:a,msExpired:l,counter:p}=n.getProperty("/timer");if(a&&t.isWorking&&l<i){s.show(`Focus for at least ${(i/6e4).toFixed(0)} minutes!`)}else{n.stopTicking();n.increaseCounter(1);n.setStatusNext();if(l>i||!t.isWorking){const{task:i}=r.getData();i.status=t;i.msExpired=l;i.msEstimated=e*36e5;r.addToHistory({...i});s.show("Phase completed");if(o){this.sendNotification("Phase completed",{body:`${(l/6e4).toFixed(0)} minute/s passed. Click here and jump into the next phase`})}}else{s.show("Phase skipped")}}},handleResetCurrentPhase(){n.stopTicking();n.setStatusPrevious()},handleCreateNewTask(){const{task:t,taskEstimation:e}=r.getData();t.status={isWorking:true,isPausing:false};t.msExpired=0;t.msEstimated=e*36e5;r.addToHistory({...t});s.show("Task added to tasklist.");this.handleCloseTaskDialog()},handleUpdateTaskByTaskPath(){r.updateTaskByTaskPath();this.handleCloseTaskEditDialog()},handleOpenTaskDialog(){const t=this.getView();if(!this.byId("task-dialog")){e.load({id:t.getId(),name:"sap.ui.demo.basicTemplate.view.Fragment.Task",controller:this}).then(e=>{t.addDependent(e);e.open()})}else{this.byId("task-dialog").open()}},handleCloseTaskDialog(){const t=this.byId("task-dialog");if(t){t.close()}},handleOpenTaskEditDialog(t){const s=t.getSource();let i;console.log(s);if(s.getSelectedAppointments){console.log(s.getSelectedAppointments());i=s.getSelectedAppointments()[0].getBindingContext("Task").getPath()}else{i=s.getBindingContext("Task").getPath()}const o=r.getProperty(i);o.sPath=i;r.setProperty("/taskEditByUser",o);const a=this.getView();if(!this.byId("task-edit-dialog")){this._taskEditDialog=e.load({id:a.getId(),name:"sap.ui.demo.basicTemplate.view.Fragment.TaskEdit",controller:this}).then(t=>{a.addDependent(t);t.open()})}else{this.byId("task-edit-dialog").open()}},handleCloseTaskEditDialog(){const t=this.byId("task-edit-dialog");if(t){t.close()}},handleSynchronizeHistory(){const t=r.syncHistory();if(t){s.show("Loaded session data from history")}else{s.show("No history data found")}},handleApplySearchTaskList(t){const e=[];const s=t.getParameter("query");if(s&&s.length>0){const t=new o({path:"title",operator:a.Contains,value1:s});const i=new o({path:"desc",operator:a.Contains,value1:s});e.push(new o({filters:[t,i],and:false}))}this.byId("task-table").getBinding("items").filter(e,"Application")},handleApplyToggleFilterTasks(t=true){const e=[];const s=this.byId("task-table");const i=this.byId("task-calender");const{showBreaks:n}=d.getProperty("/settings/history");if(n){const t=new o({path:"status/isWorking",operator:a.EQ,value1:n});e.push(t)}if(s)s.getBinding("items").filter(e,"Application");if(i)i.getBinding("appointments").filter(e,"Application");if(t)d.setProperty("/settings/history/showBreaks",!n)},handleApplyDateSorter(){const t=[];t.push(new i("startDate",true,this._groupByDay));this.byId("task-table").getBinding("items").sort(t)},_setActiveTaskMsExpired(t){const e=t.getSource().getValue();const s=e*(1e3*60*60).toFixed(0);r.setProperty("/taskEditByUser/msExpired",s)},_setActiveTaskMsEstimated(t){const e=t.getSource().getValue();const s=e*(1e3*60*60).toFixed(0);r.setProperty("/taskEditByUser/msEstimated",s)},_groupByDay(t){const e=t.getProperty("startDate");return{key:l.formatStringToDateDay(e),text:l.formatStringToDateDay(e)}}})});